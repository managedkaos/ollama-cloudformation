Description: An EC2 instance running Ollama and Open Web UI

Parameters:
  InstanceType:
    Type: String
    Description: The size and type to use for the EC2 instance
    Default: g4dn.xlarge
    AllowedValues:
      - g4dn.xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g4dn.8xlarge
      - g4dn.16xlarge
    ConstraintDescription: Must be a valid EC2 instance type.

Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM

  Profile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles: [!Ref Role]

  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow TCP traffic on port 80
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80

  Server:
    Type: AWS::EC2::Instance


    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M

    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          application_installation:
            - install_cfn
            - install_apps
        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root

            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.Server.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v
                      --stack ${AWS::StackName}
                      --resource Server
                      --configsets application_installation
                      --region ${AWS::Region}
              mode: '000400'
              owner: root
              group: root

          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf

        install_apps:
          packages:
            yum:
              docker: []
          services:
            sysvinit:
              docker:
                enabled: 'true'
                ensureRunning: 'true'

    Properties:
      InstanceType: !Ref InstanceType
      ImageId: "{{resolve:ssm:/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64}}"
      IamInstanceProfile: !Ref Profile
      SecurityGroups:
        - !Ref SecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}

      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            exec > >(tee /var/log/user-data.log) 2>&1

            yum update -y aws-cfn-bootstrap

            /opt/aws/bin/cfn-init -v \
              --stack ${AWS::StackName} \
              --region ${AWS::Region} \
              --resource Server \
              --configsets application_installation

            /opt/aws/bin/cfn-signal -e $? \
              --stack ${AWS::StackName} \
              --region ${AWS::Region} \
              --resource Server

  ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref Server

Outputs:
  URL:
    Value: !Sub 'http://${Server.PublicDnsName}/'
    Description: Application URL
